// <auto-generated />
using System;
using ItinerariesAdminWebApp.Models.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItinerariesAdminWebApp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180911004929_TouristAttractionConnection_rename")]
    partial class TouristAttractionConnection_rename
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.2-rtm-30932")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.Administrator", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("IsGlobal");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Administrators");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CountryId")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.Country", b =>
                {
                    b.Property<string>("IsoNumericCode")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Alpha2Code")
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Alpha3Code")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.HasKey("IsoNumericCode");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.Invitation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)");

                    b.Property<int>("SentBy");

                    b.Property<int>("Status");

                    b.Property<string>("Token")
                        .HasColumnType("varchar(250)");

                    b.HasKey("Id");

                    b.HasIndex("SentBy");

                    b.ToTable("Invitations");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.TouristAttraction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Address")
                        .HasColumnType("varchar(400)");

                    b.Property<int>("CategoryId");

                    b.Property<int>("CityId");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("GooglePlaceId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(60)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("GooglePlaceId")
                        .IsUnique()
                        .HasFilter("[GooglePlaceId] IS NOT NULL");

                    b.ToTable("TouristAttractions");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.TouristAttractionConnection", b =>
                {
                    b.Property<int>("CityId");

                    b.Property<int>("OriginId");

                    b.Property<int>("DestinationId");

                    b.Property<double>("Distance");

                    b.HasKey("CityId", "OriginId", "DestinationId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.ToTable("TouristAttractionConnection");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.TouristAttractionSuggestion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("varchar(400)");

                    b.Property<int?>("AnsweredBy");

                    b.Property<DateTime?>("AnsweredDate");

                    b.Property<bool?>("Approved")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(null);

                    b.Property<int>("CategoryId");

                    b.Property<int>("CityId");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("GooglePlaceId")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(250)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("varchar(60)");

                    b.Property<decimal?>("Rating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WebsiteUrl")
                        .HasColumnType("varchar(150)");

                    b.HasKey("Id");

                    b.HasIndex("AnsweredBy");

                    b.HasIndex("CategoryId");

                    b.HasIndex("CityId");

                    b.ToTable("TouristAttractionSuggestions");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.City", b =>
                {
                    b.HasOne("ItinerariesAdminWebApp.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId");
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.Invitation", b =>
                {
                    b.HasOne("ItinerariesAdminWebApp.Models.Administrator", "Administrator")
                        .WithMany("Invitations")
                        .HasForeignKey("SentBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.TouristAttraction", b =>
                {
                    b.HasOne("ItinerariesAdminWebApp.Models.Category", "Category")
                        .WithMany("TouristAttractions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ItinerariesAdminWebApp.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ItinerariesAdminWebApp.Models.Administrator", "Creator")
                        .WithMany("TouristAttractions")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("ItinerariesAdminWebApp.Models.Geoposition", "Geoposition", b1 =>
                        {
                            b1.Property<int>("TouristAttractionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Latitude")
                                .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                                .HasColumnName("Latitude")
                                .HasColumnType("DECIMAL(8,6)");

                            b1.Property<decimal>("Longitude")
                                .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                                .HasColumnName("Longitude")
                                .HasColumnType("DECIMAL(9,6)");

                            b1.ToTable("TouristAttractions");

                            b1.HasOne("ItinerariesAdminWebApp.Models.TouristAttraction")
                                .WithOne("Geoposition")
                                .HasForeignKey("ItinerariesAdminWebApp.Models.Geoposition", "TouristAttractionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.TouristAttractionConnection", b =>
                {
                    b.HasOne("ItinerariesAdminWebApp.Models.City", "City")
                        .WithMany("TouristAttractionDistances")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ItinerariesAdminWebApp.Models.TouristAttraction", "Destination")
                        .WithMany("DestinationPositionDistances")
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ItinerariesAdminWebApp.Models.TouristAttraction", "Origin")
                        .WithMany("OriginPositionDistances")
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("ItinerariesAdminWebApp.Models.TouristAttractionSuggestion", b =>
                {
                    b.HasOne("ItinerariesAdminWebApp.Models.Administrator", "Approver")
                        .WithMany("TouristAttractionSuggestions")
                        .HasForeignKey("AnsweredBy");

                    b.HasOne("ItinerariesAdminWebApp.Models.Category", "Category")
                        .WithMany("TouristAttractionSuggestions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ItinerariesAdminWebApp.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("ItinerariesAdminWebApp.Models.Geoposition", "Geoposition", b1 =>
                        {
                            b1.Property<int>("TouristAttractionSuggestionId")
                                .ValueGeneratedOnAdd()
                                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                            b1.Property<decimal>("Latitude")
                                .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                                .HasColumnName("Latitude")
                                .HasColumnType("DECIMAL(8,6)");

                            b1.Property<decimal>("Longitude")
                                .HasConversion(new ValueConverter<decimal, decimal>(v => default(decimal), v => default(decimal), new ConverterMappingHints(precision: 38, scale: 17)))
                                .HasColumnName("Longitude")
                                .HasColumnType("DECIMAL(9,6)");

                            b1.ToTable("TouristAttractionSuggestions");

                            b1.HasOne("ItinerariesAdminWebApp.Models.TouristAttractionSuggestion")
                                .WithOne("Geoposition")
                                .HasForeignKey("ItinerariesAdminWebApp.Models.Geoposition", "TouristAttractionSuggestionId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
